<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jee
                           http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

	<!-- method #1 : using bean element to configure the EJB local stateless bean -->
	<bean id="calculatorLocal"
		class="org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean">
		<property name="jndiName" 
				  value="java:global/ejb-springmvc-client/CalculatorBean!com.example.springmvc_client.ejb.stateless.CalculatorLocal" />
		<property name="businessInterface"
				  value="com.example.springmvc_client.ejb.stateless.CalculatorLocal" />
	</bean>
	
	<bean id="currencyLocal"
		class="org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean">
		<property name="jndiName" 
				  value="java:global/ejb-springmvc-client/CurrencyBean2!com.example.springmvc_client.ejb.stateless.CurrencyLocal" />
		<property name="businessInterface"
				  value="com.example.springmvc_client.ejb.stateless.CurrencyLocal" />
	</bean>
	
	
	<!-- method #2 : using jee element to configure the EJB local stateless bean -->
	<!--  
	<jee:local-slsb id="calculatorLocal" 
					jndi-name="java:global/ejb-springmvc-client/CalculatorBean!com.example.springmvc_client.ejb.stateless.CalculatorLocal"
      				business-interface="com.example.springmvc_client.ejb.stateless.CalculatorLocal"/>
	
	<jee:local-slsb id="currencyLocal" 
					jndi-name="java:global/ejb-springmvc-client/CurrencyBean!com.example.springmvc_client.ejb.stateless.CurrencyLocal"
      				business-interface="com.example.springmvc_client.ejb.stateless.CurrencyLocal"/> 
	-->
	
	
	
	<!-- method #1 : using bean element to configure the EJB remote stateless bean 
	     Note: different app server might generate different jndiName format
	           For Wildfly, please use ejb:/ejb-sessionbean-0.0.1-SNAPSHOT/CurrencyBean!com.example.ejb.sessionbean.CurrencyRemote
	     	   For Glassfish, please use java:global/ejb-sessionbean-0.0.1-SNAPSHOT/CurrencyBean!com.example.ejb.sessionbean.CurrencyRemote
	-->
	<bean id="currencyRemote"
		class="org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean">
		<property name="jndiName" 
		          value="ejb:/ejb-sessionbean-0.0.1-SNAPSHOT/CurrencyBean!com.example.ejb.sessionbean.CurrencyRemote" />
		<property name="businessInterface"
			      value="com.example.ejb.sessionbean.CurrencyRemote" /> 
		
	    <!-- If the remote EJB is deployed in the different container (App Server),
             you will need to include the jndiTemplate to configure server url 	         
	     -->
		<property name="jndiTemplate" ref="jndiTemplate" />
	</bean>
    
	<bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
  		<property name="environment">
   			<props>
   				<prop key="java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
   				<!-- 
    			<prop key="java.naming.factory.url.pkgs">org.jboss.ejb.client.naming</prop>
    			 -->
    			<prop key="java.naming.provider.url">http-remoting://localhost:8181</prop>
    			<prop key="java.naming.security.principal">admin</prop>
    			<prop key="java.naming.security.credentials">P@ssw0rd123</prop>
   			</props>
  		</property>
 	</bean>
	
	
    <!-- method #2 : using jee element to configure the EJB remote stateless bean -->
    <!--
	<jee:remote-slsb id="currencyRemote"
					 jndi-name="java:global/ejb-sessionbean-0.0.1-SNAPSHOT/CurrencyBean!com.example.ejb.sessionbean.CurrencyRemote"
           			 business-interface="com.example.ejb.sessionbean.CurrencyRemote"
           	         cache-home="false" 
           	         lookup-home-on-startup="false"
                     refresh-home-on-connect-failure="true"
                     <jee:environment>
        				java.naming.factory.initial=org.jboss.naming.remote.client.InitialContextFactory
        				java.naming.provider.url=http-remoting://localhost:8181
        				jboss.naming.client.ejb.context=true
        				java.naming.security.principal=admin
        				java.naming.security.credentials=P@ssw0rd123
    					</jee:environment>
                     />
	-->
</beans>
